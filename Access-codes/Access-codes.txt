Access-codes
=============

Write a function solution(l) that takes a list of positive integers l and counts the number of "lucky triples" of (li, lj, lk) where the list indices meet the requirement i < j < k. The length of l is between 2 and 2000 inclusive. The elements of l are between 1 and 999999 inclusive. The answer fits within a signed 32-bit integer. Some of the lists are purposely generated without any access codes to throw off spies, so if no triples are found, return 0.

For example, [1, 2, 3, 4, 5, 6] has the triples: [1, 2, 4], [1, 2, 6], [1, 3, 6], making the answer 3 total.

Languages
To provide a Java solution, edit Solution.java To provide a Python solution, edit solution.py

Test cases
Your code should pass the following test cases. Note that it may also be run against hidden test cases not shown here.

-- Java cases --

Input: Solution.solution([1, 1, 1]) Output: 1

Input: Solution.solution([1, 2, 3, 4, 5, 6]) Output: 3

-- Python cases --

Input: solution.solution([1, 2, 3, 4, 5, 6]) Output: 3

Input: solution.solution([1, 1, 1]) Output: 1